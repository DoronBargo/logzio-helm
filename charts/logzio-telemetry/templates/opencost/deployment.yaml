{{- if .Values.opencost.enabled }}
# Create a deployment for a single cost model pod
#
# See environment variables if you would like to add a Prometheus for
# cost model to read from for full functionality.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-opencost
  labels:
    app: opencost
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opencost
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: opencost
    spec:
      restartPolicy: {{ .Values.opencost.restartPolicy }}
      serviceAccountName: {{ .Release.Name }}-opencost
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        - image: "{{ .Values.opencost.image.repository }}:{{ .Values.opencost.image.tag }}"
          name: opencost
          resources:
            requests:
              cpu: {{ .Values.opencost.resources.requests.cpu }}
              memory: {{ .Values.opencost.resources.requests.memory }}
            limits:
              cpu: {{ .Values.opencost.resources.limits.cpu }}
              memory: {{ .Values.opencost.resources.limits.memory }}
          env:
            - name: PROMETHEUS_SERVER_ENDPOINT # we use an invalid endpoint - missing env variable will cause the pod to not work
              value: {{ .Values.opencost.prometheusEndpoint }} # The endpoint should have the form http://<service-name>.<namespace-name>.svc
            - name: CLOUD_PROVIDER_API_KEY
              value: "AIzaSyD29bGxmHAVEOBYtgd8sYM2gM2ekfxQX4U" # The GCP Pricing API requires a key. This is supplied just for evaluation.
            - name: CLUSTER_ID
              value: {{ .Values.env_id}} # Default cluster ID to use if cluster_id is not set in Prometheus metrics.
          imagePullPolicy: {{ .Values.opencost.restartPolicy }}

{{- end }}